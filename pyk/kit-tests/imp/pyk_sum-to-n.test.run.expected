+ init pyk_sum-to-n pyk_sum-to-n-spec.k
+ list-cfgs
PYK_SUM-TO-N-SPEC.main
+ case-split #init N ==Int 1 --alias-true init-1 --alias-false init-not-1
+ case-split @init-not-1 N ==Int 10 --alias-true init-10
+ show-edge @init-not-1,@init-10
fe1970..2d5302 (expanded, @init-not-1)
│ N ==Int 10
616bd9..181a8e (frontier, leaf, @init-10)

+ show-node @init-10
<T>
  <k>
    int $n , $s , .Ids ; $n = N ; $s = 0 ; while ( ! $n <= 0 ) { $s = $s + $n ; $n = $n + -1 ; }
  </k>
  <state>
    .Map
  </state>
</T>
#And { true #Equals N >=Int 0 }
#And { true #Equals N ==Int 10 }
#And { true #Equals notBool ( N ==Int 1 ) }
+ build-edges @init-1,#target
+ verify-edges --edges @init-1,#target
+ build-edges @init-10,#target
+ verify-edges --edges @init-10,#target
+ show-cfg
84f5b5..dc759b (init, expanded)
┣━ 5189cb..42eed2 (expanded, @init-1)    N ==Int 1
┃   │  [1m[32m(verified)[0m[0m
┃   │  (-1 steps)
┃   └  6a6e72..499ac5 (target, leaf)
┃
┗━ fe1970..2d5302 (expanded, @init-not-1)    notBool ( N ==Int 1 )
    ┣━ 616bd9..181a8e (expanded, @init-10)    N ==Int 10
    ┃   │  [1m[32m(verified)[0m[0m
    ┃   │  (-1 steps)
    ┃   └  6a6e72..499ac5 (target, leaf)
    ┃
    ┗━ [1m1413d6..8f4a4c (frontier, leaf)[0m    notBool ( N ==Int 10 )


